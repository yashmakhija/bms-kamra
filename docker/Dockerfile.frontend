FROM node:20-alpine AS builder

WORKDIR /app


RUN apk add --no-cache python3 make g++ git


ENV PNPM_HOME="/root/.local/share/pnpm"
ENV PATH="$PNPM_HOME:$PATH"


RUN npm install -g pnpm

COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/web/package.json ./apps/web/
COPY packages/api-client/package.json ./packages/api-client/
COPY packages/ui/package.json ./packages/ui/
COPY packages/typescript-config/package.json ./packages/typescript-config/


RUN pnpm install --frozen-lockfile


COPY . .


RUN pnpm --filter @repo/api-client build

RUN cd packages/ui && pnpm add -D class-variance-authority clsx tailwind-merge

RUN pnpm --filter web build


FROM nginx:alpine AS production


COPY --from=builder /app/apps/web/dist /usr/share/nginx/html

RUN echo 'server { \
    listen 80; \
    location / { \
        root /usr/share/nginx/html; \
        index index.html; \
        try_files $uri $uri/ /index.html; \
    } \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]