name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set environment variables from secrets
      - name: Set environment variables
        run: |
          # Set tags for each service
          echo "BACKEND_TAG=ghcr.io/${{ github.repository }}/backend:latest" >> $GITHUB_ENV
          echo "BACKEND_SHA_TAG=ghcr.io/${{ github.repository }}/backend:${{ github.sha }}" >> $GITHUB_ENV
          
          # Load environment variables from GitHub secrets
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
          echo "API_URL=${{ secrets.API_URL }}" >> $GITHUB_ENV
          echo "NODE_ENV=production" >> $GITHUB_ENV

      # Build Backend image using docker-compose
      - name: Build Backend using docker-compose
        run: |
          # Create .env file for docker-compose
          cat > .env << EOF
          POSTGRES_USER=${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ env.POSTGRES_DB }}
          NODE_ENV=${{ env.NODE_ENV }}
          JWT_SECRET=${{ env.JWT_SECRET }}
          API_URL=${{ env.API_URL }}
          API_PORT=8080
          EOF
          
          # Build backend using docker-compose
          docker-compose build backend
      
      - name: Tag and push Backend image
        run: |
          # The image name from docker-compose
          BACKEND_IMAGE=$(docker-compose images -q backend)
          
          # Tag with latest and SHA
          docker tag $BACKEND_IMAGE ${{ env.BACKEND_TAG }}
          docker tag $BACKEND_IMAGE ${{ env.BACKEND_SHA_TAG }}
          
          # Push both tags
          docker push ${{ env.BACKEND_TAG }}
          docker push ${{ env.BACKEND_SHA_TAG }}

      # Build and push Frontend image
      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.frontend
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/frontend:latest
            ghcr.io/${{ github.repository }}/frontend:${{ github.sha }}
          build-args: |
            API_URL=${{ env.API_URL }}

      # Build and push Admin image
      - name: Build and push Admin image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.admin
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/admin:latest
            ghcr.io/${{ github.repository }}/admin:${{ github.sha }}
          build-args: |
            API_URL=${{ env.API_URL }} 